[{"C:\\Users\\Sam\\code\\volume7\\reminderizer\\client\\src\\index.jsx":"1","C:\\Users\\Sam\\code\\volume7\\reminderizer\\client\\src\\App.jsx":"2","C:\\Users\\Sam\\code\\volume7\\reminderizer\\client\\src\\views\\Signup.jsx":"3","C:\\Users\\Sam\\code\\volume7\\reminderizer\\client\\src\\views\\Login.jsx":"4","C:\\Users\\Sam\\code\\volume7\\reminderizer\\client\\src\\views\\Dashboard.jsx":"5","C:\\Users\\Sam\\code\\volume7\\reminderizer\\client\\src\\components\\Header.jsx":"6","C:\\Users\\Sam\\code\\volume7\\reminderizer\\client\\src\\Container.jsx":"7"},{"size":220,"mtime":1607971927542,"results":"8","hashOfConfig":"9"},{"size":335,"mtime":1607985418703,"results":"10","hashOfConfig":"9"},{"size":1361,"mtime":1607981361523,"results":"11","hashOfConfig":"9"},{"size":1403,"mtime":1607983854585,"results":"12","hashOfConfig":"9"},{"size":167,"mtime":1607982094812,"results":"13","hashOfConfig":"9"},{"size":798,"mtime":1607984542403,"results":"14","hashOfConfig":"9"},{"size":1203,"mtime":1607985741620,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"11hreg0",{"filePath":"19","messages":"20","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"21","messages":"22","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"18"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26","usedDeprecatedRules":"18"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"18"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"18"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Sam\\code\\volume7\\reminderizer\\client\\src\\index.jsx",[],["35","36","37","38","39","40"],"C:\\Users\\Sam\\code\\volume7\\reminderizer\\client\\src\\App.jsx",["41"],"C:\\Users\\Sam\\code\\volume7\\reminderizer\\client\\src\\views\\Signup.jsx",["42","43","44"],"import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\n\nconst Signup = () => {\n  const [usernameInput, setUsernameInput] = useState('');\n  const [passwordInput, setPasswordInput] = useState('');\n  const [errorMessage, setErrorMessage] = useState('');\n\n  const handleSignupSubmit = async (e) => {\n    e.preventDefault();\n    const response = await fetch('http://localhost:8888/signup', {\n      credentials: 'include',\n      body: JSON.stringify({\n        username: usernameInput,\n        password: passwordInput,\n      }),\n      headers: { 'content-type': 'application/json' },\n      method: 'POST',\n    });\n    const body = await response.json();\n    if (body.success) {\n      console.log(body);\n    } else {\n      setErrorMessage(body.errorMessage);\n      console.log(body.errorMessage);\n    }\n  };\n  return (\n    <div>\n      <h1>Signup</h1>\n      <Link to=\"/login\">Login</Link>\n      <form onSubmit={handleSignupSubmit}>\n        <input\n          onChange={(e) => setUsernameInput(e.target.value)}\n          placeholder=\"username\"\n          required\n          type=\"text\"\n        />\n        <input\n          onChange={(e) => setPasswordInput(e.target.value)}\n          placeholder=\"Password\"\n          required\n          type=\"text\"\n        />\n        <input type=\"submit\" />\n      </form>\n    </div>\n  );\n};\n\nexport default Signup;\n","C:\\Users\\Sam\\code\\volume7\\reminderizer\\client\\src\\views\\Login.jsx",["45","46"],"import React, { useState } from 'react';\nimport { Link, useHistory } from 'react-router-dom';\n\nconst Login = () => {\n  const [usernameInput, setUsernameInput] = useState('');\n  const [passwordInput, setPasswordInput] = useState('');\n  const [errorMessage, setErrorMessage] = useState('');\n  const routerhistory = useHistory();\n\n  const handleLoginSubmit = async (e) => {\n    e.preventDefault();\n    const response = await fetch('http://localhost:8888/login', {\n      credentials: 'include',\n      body: JSON.stringify({\n        username: usernameInput,\n        password: passwordInput,\n      }),\n      headers: { 'content-type': 'application/json' },\n      method: 'POST',\n    });\n    const body = await response.json();\n    if (body.success) {\n      console.log(body);\n      routerhistory.push('/dashboard');\n    } else {\n      setErrorMessage(body.errorMessage);\n    }\n  };\n  return (\n    <div>\n      <h1>Login</h1>\n      <Link to=\"/\">Signup</Link>\n      <form onSubmit={handleLoginSubmit}>\n        <input\n          onChange={(e) => setUsernameInput(e.target.value)}\n          placeholder=\"username\"\n          required\n          type=\"text\"\n        />\n        <input\n          onChange={(e) => setPasswordInput(e.target.value)}\n          placeholder=\"Password\"\n          required\n          type=\"text\"\n        />\n        <input type=\"submit\" />\n      </form>\n    </div>\n  );\n};\n\nexport default Login;\n","C:\\Users\\Sam\\code\\volume7\\reminderizer\\client\\src\\views\\Dashboard.jsx",["47"],"import React from 'react';\n\nconst Dashboard = () => {\n  console.log('hi');\n  return (\n    <div>\n      <h1>Dashboard</h1>\n    </div>\n  );\n};\n\nexport default Dashboard;\n","C:\\Users\\Sam\\code\\volume7\\reminderizer\\client\\src\\components\\Header.jsx",["48","49"],"import React from 'react';\nimport PropTypes from 'prop-types';\nimport { useHistory } from 'react-router-dom';\n\nconst Header = (props) => {\n  const { isLoggedIn } = props;\n  const history = useHistory();\n\n  const logoutSubmit = async () => {\n    const response = await fetch('http://localhost:8888/logout', {\n      credentials: 'include',\n      method: 'POST',\n    });\n    const body = await response.json();\n    if (body.success) {\n      // setIsLoggedIn(false);\n      history.push('/login');\n    }\n    console.log(body);\n  };\n\n  return (\n    <div>\n      <div>\n        You&apos;re logged in!\n        {' '}\n        <button type=\"button\" onClick={logoutSubmit}>Log out</button>\n      </div>\n    </div>\n  );\n};\n\nHeader.propTypes = {\n  isLoggedIn: PropTypes.bool.isRequired,\n};\n\nexport default Header;\n","C:\\Users\\Sam\\code\\volume7\\reminderizer\\client\\src\\Container.jsx",[],{"ruleId":"50","replacedBy":"51"},{"ruleId":"52","replacedBy":"53"},{"ruleId":"54","replacedBy":"55"},{"ruleId":"56","replacedBy":"57"},{"ruleId":"58","replacedBy":"59"},{"ruleId":"60","replacedBy":"61"},{"ruleId":"62","severity":1,"message":"63","line":5,"column":3,"nodeType":"64","messageId":"65","endLine":5,"endColumn":8},{"ruleId":"62","severity":1,"message":"66","line":7,"column":10,"nodeType":"64","messageId":"65","endLine":7,"endColumn":22},{"ruleId":"67","severity":1,"message":"68","line":22,"column":7,"nodeType":"69","messageId":"70","endLine":22,"endColumn":18},{"ruleId":"67","severity":1,"message":"68","line":25,"column":7,"nodeType":"69","messageId":"70","endLine":25,"endColumn":18},{"ruleId":"62","severity":1,"message":"66","line":7,"column":10,"nodeType":"64","messageId":"65","endLine":7,"endColumn":22},{"ruleId":"67","severity":1,"message":"68","line":23,"column":7,"nodeType":"69","messageId":"70","endLine":23,"endColumn":18},{"ruleId":"67","severity":1,"message":"68","line":4,"column":3,"nodeType":"69","messageId":"70","endLine":4,"endColumn":14},{"ruleId":"62","severity":1,"message":"71","line":6,"column":11,"nodeType":"64","messageId":"65","endLine":6,"endColumn":21},{"ruleId":"67","severity":1,"message":"68","line":19,"column":5,"nodeType":"69","messageId":"70","endLine":19,"endColumn":16},"lines-around-directive",["72"],"no-spaced-func",["73"],"global-require",[],"no-buffer-constructor",[],"no-new-require",[],"no-path-concat",[],"no-unused-vars","'Route' is defined but never used.","Identifier","unusedVar","'errorMessage' is assigned a value but never used.","no-console","Unexpected console statement.","MemberExpression","unexpected","'isLoggedIn' is assigned a value but never used.","padding-line-between-statements","func-call-spacing"]