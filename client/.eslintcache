[{"C:\\Users\\Sam\\code\\volume7\\reminderizer\\client\\src\\index.jsx":"1","C:\\Users\\Sam\\code\\volume7\\reminderizer\\client\\src\\App.jsx":"2","C:\\Users\\Sam\\code\\volume7\\reminderizer\\client\\src\\views\\Signup.jsx":"3","C:\\Users\\Sam\\code\\volume7\\reminderizer\\client\\src\\views\\Login.jsx":"4","C:\\Users\\Sam\\code\\volume7\\reminderizer\\client\\src\\views\\Dashboard.jsx":"5","C:\\Users\\Sam\\code\\volume7\\reminderizer\\client\\src\\components\\Header.jsx":"6","C:\\Users\\Sam\\code\\volume7\\reminderizer\\client\\src\\Container.jsx":"7"},{"size":220,"mtime":1607971927542,"results":"8","hashOfConfig":"9"},{"size":325,"mtime":1607986064349,"results":"10","hashOfConfig":"9"},{"size":1608,"mtime":1607987610291,"results":"11","hashOfConfig":"9"},{"size":1597,"mtime":1607987980758,"results":"12","hashOfConfig":"9"},{"size":167,"mtime":1607982094812,"results":"13","hashOfConfig":"9"},{"size":816,"mtime":1607986217472,"results":"14","hashOfConfig":"9"},{"size":1344,"mtime":1607988126016,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"11hreg0",{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"21","messages":"22","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"18"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26","usedDeprecatedRules":"18"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"18"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"18"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Sam\\code\\volume7\\reminderizer\\client\\src\\index.jsx",[],["35","36","37","38","39","40"],"C:\\Users\\Sam\\code\\volume7\\reminderizer\\client\\src\\App.jsx",[],"C:\\Users\\Sam\\code\\volume7\\reminderizer\\client\\src\\views\\Signup.jsx",["41","42","43"],"import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { Link, useHistory } from 'react-router-dom';\n\nconst Signup = (props) => {\n  const { handleLoggedUpdate } = props;\n  const [emailInput, setEmailInput] = useState('');\n  const [passwordInput, setPasswordInput] = useState('');\n  const [errorMessage, setErrorMessage] = useState('');\n  const history = useHistory();\n\n  const handleSignupSubmit = async (e) => {\n    e.preventDefault();\n    const response = await fetch('http://localhost:8888/signup', {\n      credentials: 'include',\n      body: JSON.stringify({\n        email: emailInput,\n        password: passwordInput,\n      }),\n      headers: { 'content-type': 'application/json' },\n      method: 'POST',\n    });\n    const body = await response.json();\n    if (body.success) {\n      console.log(body);\n      handleLoggedUpdate(true);\n      history.push('/dashboard');\n    } else {\n      setErrorMessage(body.errorMessage);\n      console.log(body.errorMessage);\n    }\n  };\n  return (\n    <div>\n      <h1>Signup</h1>\n      <Link to=\"/login\">Login</Link>\n      <form onSubmit={handleSignupSubmit}>\n        <input\n          onChange={(e) => setEmailInput(e.target.value)}\n          placeholder=\"email\"\n          required\n          type=\"text\"\n        />\n        <input\n          onChange={(e) => setPasswordInput(e.target.value)}\n          placeholder=\"Password\"\n          required\n          type=\"text\"\n        />\n        <input type=\"submit\" />\n      </form>\n    </div>\n  );\n};\n\nSignup.propTypes = {\n  handleLoggedUpdate: PropTypes.func.isRequired,\n};\n\nexport default Signup;\n","C:\\Users\\Sam\\code\\volume7\\reminderizer\\client\\src\\views\\Login.jsx",["44","45","46"],"import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { Link, useHistory } from 'react-router-dom';\n\nconst Login = (props) => {\n  const { handleLoggedUpdate } = props;\n  const [emailInput, setEmailInput] = useState('');\n  const [passwordInput, setPasswordInput] = useState('');\n  const [errorMessage, setErrorMessage] = useState('');\n  const history = useHistory();\n\n  const handleLoginSubmit = async (e) => {\n    e.preventDefault();\n    const response = await fetch('http://localhost:8888/login', {\n      credentials: 'include',\n      body: JSON.stringify({\n        email: emailInput,\n        password: passwordInput,\n      }),\n      headers: { 'content-type': 'application/json' },\n      method: 'POST',\n    });\n    const body = await response.json();\n    if (body.success) {\n      console.log(body);\n      handleLoggedUpdate(true);\n      history.push('/dashboard');\n    } else {\n      console.log(body.errorMessage);\n      setErrorMessage(body.errorMessage);\n    }\n  };\n  return (\n    <div>\n      <h1>Login</h1>\n      <Link to=\"/\">Signup</Link>\n      <form onSubmit={handleLoginSubmit}>\n        <input\n          onChange={(e) => setEmailInput(e.target.value)}\n          placeholder=\"email\"\n          required\n          type=\"text\"\n        />\n        <input\n          onChange={(e) => setPasswordInput(e.target.value)}\n          placeholder=\"Password\"\n          required\n          type=\"text\"\n        />\n        <input type=\"submit\" />\n      </form>\n    </div>\n  );\n};\n\nLogin.propTypes = {\n  handleLoggedUpdate: PropTypes.func.isRequired,\n};\n\nexport default Login;\n","C:\\Users\\Sam\\code\\volume7\\reminderizer\\client\\src\\views\\Dashboard.jsx",["47"],"import React from 'react';\n\nconst Dashboard = () => {\n  console.log('hi');\n  return (\n    <div>\n      <h1>Dashboard</h1>\n    </div>\n  );\n};\n\nexport default Dashboard;\n","C:\\Users\\Sam\\code\\volume7\\reminderizer\\client\\src\\components\\Header.jsx",["48"],"import React from 'react';\nimport PropTypes from 'prop-types';\nimport { useHistory } from 'react-router-dom';\n\nconst Header = (props) => {\n  const { handleLoggedUpdate } = props;\n  const history = useHistory();\n\n  const logoutSubmit = async () => {\n    const response = await fetch('http://localhost:8888/logout', {\n      credentials: 'include',\n      method: 'POST',\n    });\n    const body = await response.json();\n    if (body.success) {\n      handleLoggedUpdate(false);\n      history.push('/login');\n    }\n    console.log(body);\n  };\n\n  return (\n    <div>\n      <div>\n        You&apos;re logged in!\n        {' '}\n        <button type=\"button\" onClick={logoutSubmit}>Log out</button>\n      </div>\n    </div>\n  );\n};\n\nHeader.propTypes = {\n  handleLoggedUpdate: PropTypes.func.isRequired,\n};\n\nexport default Header;\n","C:\\Users\\Sam\\code\\volume7\\reminderizer\\client\\src\\Container.jsx",[],{"ruleId":"49","replacedBy":"50"},{"ruleId":"51","replacedBy":"52"},{"ruleId":"53","replacedBy":"54"},{"ruleId":"55","replacedBy":"56"},{"ruleId":"57","replacedBy":"58"},{"ruleId":"59","replacedBy":"60"},{"ruleId":"61","severity":1,"message":"62","line":9,"column":10,"nodeType":"63","messageId":"64","endLine":9,"endColumn":22},{"ruleId":"65","severity":1,"message":"66","line":25,"column":7,"nodeType":"67","messageId":"68","endLine":25,"endColumn":18},{"ruleId":"65","severity":1,"message":"66","line":30,"column":7,"nodeType":"67","messageId":"68","endLine":30,"endColumn":18},{"ruleId":"61","severity":1,"message":"62","line":9,"column":10,"nodeType":"63","messageId":"64","endLine":9,"endColumn":22},{"ruleId":"65","severity":1,"message":"66","line":25,"column":7,"nodeType":"67","messageId":"68","endLine":25,"endColumn":18},{"ruleId":"65","severity":1,"message":"66","line":29,"column":7,"nodeType":"67","messageId":"68","endLine":29,"endColumn":18},{"ruleId":"65","severity":1,"message":"66","line":4,"column":3,"nodeType":"67","messageId":"68","endLine":4,"endColumn":14},{"ruleId":"65","severity":1,"message":"66","line":19,"column":5,"nodeType":"67","messageId":"68","endLine":19,"endColumn":16},"lines-around-directive",["69"],"no-spaced-func",["70"],"global-require",[],"no-buffer-constructor",[],"no-new-require",[],"no-path-concat",[],"no-unused-vars","'errorMessage' is assigned a value but never used.","Identifier","unusedVar","no-console","Unexpected console statement.","MemberExpression","unexpected","padding-line-between-statements","func-call-spacing"]